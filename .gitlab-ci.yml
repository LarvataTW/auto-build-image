variables:
  KANIKO_VERSION: 0.7.0

  BUILD_IMAGE_NAME: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA"
  RELEASE_IMAGE_NAME: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:stable"

stages:
  - build
  - test
  - release

build:
  stage: build
  image:
    name: "gcr.io/kaniko-project/executor:debug-v$KANIKO_VERSION"
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - >
      /kaniko/executor
      --build-arg "KANIKO_TAG=debug-v$KANIKO_VERSION"
      --context "$CI_PROJECT_DIR"
      --destination "$BUILD_IMAGE_NAME"

test-dockerfile:
  stage: test
  image: "$BUILD_IMAGE_NAME"
  script:
    # build our own image dockerfile
    - /build/build.sh --no-push --cache=false

test-herokuish:
  stage: test
  image: "$BUILD_IMAGE_NAME"
  script:
    # build a herokuish ruby project
    - cd "$CI_PROJECT_DIR/test/ruby"
    - /build/build.sh --no-push --cache=false --context="$CI_PROJECT_DIR/test/ruby"

release:
  stage: release
  image: docker
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker pull "$BUILD_IMAGE_NAME"
    - docker tag "$BUILD_IMAGE_NAME" "$RELEASE_IMAGE_NAME"
    - docker push "$RELEASE_IMAGE_NAME"
